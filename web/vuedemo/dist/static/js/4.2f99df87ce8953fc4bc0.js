webpackJsonp([4],{"2WrF":function(t,e){},A35P:function(t,e,v){t.exports=v.p+"static/img/mulu.1168858.png"},DLa7:function(t,e,v){t.exports=v.p+"static/img/appvue.8b06b3d.png"},I6zO:function(t,e,v){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s={render:function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("el-tabs",{attrs:{type:"border-card"}},[s("el-tab-pane",{attrs:{label:"vue简介"}},[s("div",{staticClass:"title"},[t._v("什么是Vue")]),t._v(" "),s("el-card",{staticClass:"box-card"},[s("div",{key:"1",staticClass:"text item"},[t._v("\n          VUE是一个简单、好用、易上手、扩展性强的框架\n        ")]),t._v(" "),s("div",{key:"1",staticClass:"text item"},[t._v("\n          VUE是一种MVVM架构的前端框架，有响应式的数据绑定,组件化的开发,Virtual DOM\n        ")]),t._v(" "),s("div",{key:"2",staticClass:"text item"},[t._v("\n          Vue是一个组件化的构建系统，允许我们使用小型、独立和通常可复用的组件构建大型应用。\n        ")])]),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"title"},[t._v("VUE结构")]),t._v(" "),s("div",{staticClass:"description"},[t._v("每一个VUE后缀的页面都是由HTML，CSS，JS组成。熟悉的配方，熟悉的味道")]),t._v(" "),s("img",{attrs:{src:v("IaGG")}}),t._v(" "),s("el-row",[t._v("\n        显示：\n      ")]),t._v(" "),s("img",{attrs:{src:v("tf2Y")}}),t._v(" "),s("div",{staticClass:"description"},[t._v("其中template下是html，script下是js，style下是css")])],1),t._v(" "),s("el-tab-pane",{attrs:{label:"VUE的特性"}},[s("div",{staticClass:"title"},[t._v("数据驱动")]),t._v(" "),s("div",{staticClass:"description"},[t._v("Vue.js 一个核心思想是数据驱动。")]),t._v(" "),s("img",{attrs:{src:v("xDy1"),width:"80%"}}),t._v(" "),s("el-row",[t._v("\n        所谓数据驱动，是指视图是由数据驱动生成的，我们对视图的修改，不会直接操作 DOM，而是通过修改数据。\n      ")]),t._v(" "),s("el-row",[t._v("\n        它相比我们传统的前端开发，如使用 jQuery 等前端库直接修改 DOM，大大简化了代码量。\n      ")]),t._v(" "),s("el-row",[t._v("\n        特别是当交互复杂的时候，只关心数据的修改会让代码的逻辑变的非常清晰，因为 DOM 变成了数据的映射，我们所有的逻辑都是对数据的修改，而不用碰触 DOM，这样的代码非常利于维护。\n      ")]),t._v(" "),s("el-row",[t._v("\n        在 Vue.js 中我们可以采用简洁的模板语法来声明式的将数据渲染为 DOM：\n      ")]),t._v(" "),s("img",{attrs:{src:v("Yd5W"),width:"60%",height:"300px"}}),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" 示例：\n      "),s("el-input",{attrs:{value:""},model:{value:t.message,callback:function(e){t.message=e},expression:"message"}}),t._v(" "),s("div",{staticStyle:{background:"yellow"}},[t._v("\n        "+t._s(t.message)+"\n      ")]),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"title"},[t._v("响应式的数据绑定")]),t._v(" "),s("el-row",[t._v("\n        h1标签里面通过"+t._s(t.message)+"这个写法与input标签中的value绑定在了一起，其中变化，另外一个和它绑定的数据就跟着变化。 就是vue.js会自动响应数据的变化情况，并且根据用户在代码中预先写好的绑定关系，对所有绑定在一起的数据和视图内容都进行修改。而这种绑定关系，在图上是以input 标签的v-model属性来声明的，vue.js为声明式渲染的模版引擎。\n      ")]),t._v(" "),s("img",{attrs:{src:v("IaGG")}}),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"title"},[t._v("组件化开发")]),t._v(" "),s("el-row",[t._v("\n        传统前端开发的时候，我们都是每个人做一个页面，然后分别实现css，js，最后套入各种后端模版引擎。\n      ")]),t._v(" "),s("el-row",[t._v("\n        页面交互和结构十分复杂，一个页面上就有许许多多的模块需要编写，而且往往一个模块的代码量和工作量就非常庞大\n      ")]),t._v(" "),s("el-row",[t._v("\n        Vue.js通过组件，把一个单页应用中的各种模块拆分到一个一个单独的组件（component）中，我们只要先在父级应用中写好各种组件标签（占坑），并且在组件标签中写好要传入组件的参数（就像给函数传入参数一样，这个参数叫做组件的属性），然后再分别写好各种组件的实现\n      ")]),t._v(" "),s("el-row",[t._v("\n        函数可以复用，我们定义好的组件也可以高度复用，对功能进行抽象，传入不同的参数\n      ")]),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"title"},[t._v(" Virtual DOM")]),t._v(" "),s("el-row",[t._v("浏览器本身处理DOM也是有性能瓶颈的，尤其是在传统开发中，用JQuery或者原生的JavaScript DOM操作函数对DOM进行频繁操作的时候，浏览器要不停的渲染新的DOM树，导致页面看起来非常卡顿。")]),t._v(" "),s("el-row",[t._v("而Virtual DOM则是虚拟DOM的英文，简单来说，他就是一种可以预先通过JavaScript进行各种计算，把最终的DOM操作计算出来并优化，由于这个DOM操作属于预处理操作，并没有真实的操作DOM，所以叫做虚拟DOM。最后在计算完毕才真正将DOM操作提交，将DOM操作变化反映到DOM树上。 ！\n      ")])],1),t._v(" "),s("el-tab-pane",{attrs:{label:"VUE的项目架构"}},[s("div",{staticClass:"title"},[t._v("VUE的实例")]),t._v(" "),s("div",{staticClass:"description"},[t._v("创建一个VUE实例，大概需要以下过程")]),t._v(" "),s("el-row",[t._v("事实上：每个Vue的应用都是通过Vue()函数创建一个新的Vue实例开始的。创建了一个Vue实例，其实就创建了一个ViewModel.")]),t._v(" "),s("el-row",[t._v(' View：是看得到的，即视图，用到Vue的项目中来，它应该是“模板”。也就是用来挂载Vue实例的一个DOM元素，通常在项目根目录中index.html文件中出现，比如 \' div id="app" div\n      ')]),t._v(" "),s("el-row",[t._v("Model：即模型（或数据），跟MVC中的Model一样，就是想要显示到模型上的数据，也是我们需要在程序生命周期中可能需要更新数据\n      ")]),t._v(" "),s("el-row",[t._v("在MVVM模型中，View和Model是分开的，两者不需要相互关心。但两者分开之后得通过ViewModel连接起来。")]),t._v(" "),s("el-row",[t._v("将组件渲染，并且构造 DOM 元素然后塞入页面的过程称为组件的挂载")]),t._v(" "),s("img",{attrs:{src:v("OzL2")}}),t._v(" "),s("div",{staticClass:"title"},[t._v("VUE项目架构")]),t._v(" "),s("img",{attrs:{src:v("A35P")}}),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("el-row",[t._v("main.js是我们的入口文件，主要作用是初始化vue实例并使用需要的插件")]),t._v(" "),s("img",{attrs:{src:v("rKbW")}}),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("el-row",[t._v("App.vue是主程序，其他所有的.vue都是放在App.vue中，所以只需要加载App.vue就完全可以把其他的东西加载出来。")]),t._v(" "),s("img",{attrs:{src:v("DLa7")}})],1),t._v(" "),s("el-tab-pane",{attrs:{label:"WHY VUE"}},[s("div",{staticClass:"title"},[t._v("VUE和Angular的对比")]),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"description"},[t._v("TypeScript")]),t._v(" "),s("el-row",[t._v("\n        Angular 事实上必须用 TypeScript 来开发，因为它的文档和学习资源几乎全部是面向 TS 的。\n      ")]),t._v(" "),s("el-row",[t._v("\n        TS 有很多好处——静态类型检查在大规模的应用中非常有用，同时对于 Java 和 C# 背景的开发者也是非常提升开发效率的。\n      ")]),t._v(" "),s("el-row",[t._v("\n        然而，并不是所有人都想用 TS——在中小型规模的项目中，引入 TS 可能并不会带来太多明显的优势。在这些情况下，用 Vue 会是更好的选择，因为在不用 TS 的情况下使用 Angular 会很有挑战性。\n      ")]),t._v(" "),s("el-row",[t._v("\n        VUE两者皆可\n      ")]),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"description"},[t._v("灵活性")]),t._v(" "),s("el-row",[t._v("\n        Vue 相比于 Angular 更加灵活，Vue 官方提供了构建工具来协助你构建项目,比如vue-cli\n      ")]),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"description"},[t._v("体积")]),t._v(" "),s("el-row",[t._v("\n        VUE更小，一个包含了 Vuex + Vue Router 的 Vue 项目 (gzip 之后 30kB) 相比使用了这些优化的 angular-cli 生成的默认项目尺寸 (~65KB) 还是要小得多。\n      ")]),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"description"},[t._v("学习曲线")]),t._v(" "),s("el-row",[t._v("\n        要学习 Vue，你只需要有良好的 HTML 和 JavaScript 基础。\n      ")]),t._v(" "),s("el-row",[t._v("\n        Angular 作为一个针对大型的复杂应用的框架，它的 API 面积比起 Vue 要大得多,对于经验不甚丰富的开发者相当的不友好。\n      ")]),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("div",{staticClass:"title"},[t._v("好看易上手的丰富组件库")]),t._v(" "),s("div",{staticClass:"description"},[t._v("Element，饿了么公司基于vue开发的vue的ui组件库")]),t._v(" "),s("el-row",[t._v("\n        一套为开发者、设计师和产品经理准备的组件库，提供了配套设计资源，帮助你的网站快速成型。\n      ")]),t._v(" "),s("a",{attrs:{href:"http://element-cn.eleme.io/#/zh-CN/component/input-number"}},[t._v("ElementUI")])],1)],1)],1)},staticRenderFns:[]};var i=v("VU/8")({name:"Introduction",data:function(){return{message:"Welcome to vuejs!",in:""}}},s,!1,function(t){v("2WrF")},"data-v-525b7306",null);e.default=i.exports},IaGG:function(t,e,v){t.exports=v.p+"static/img/code.2b64c32.png"},OzL2:function(t,e,v){t.exports=v.p+"static/img/chuangjian.be9cb81.png"},Yd5W:function(t,e,v){t.exports=v.p+"static/img/hello.b838a72.png"},rKbW:function(t,e,v){t.exports=v.p+"static/img/mainjs.e068584.png"},tf2Y:function(t,e,v){t.exports=v.p+"static/img/page.e58736f.png"},xDy1:function(t,e,v){t.exports=v.p+"static/img/data.42bbecd.png"}});
//# sourceMappingURL=4.2f99df87ce8953fc4bc0.js.map